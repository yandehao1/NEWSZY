//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18408 版自动生成。
// 
#pragma warning disable 1591

namespace RuRo.BLL.PTtest {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ChasCommonSOAP", Namespace="http://chas.hit.com/transport/integration/common/intf")]
    public partial class ChasCommonSvc : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback queryPatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback queryDiagnosisOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ChasCommonSvc() {
            this.Url = global::RuRo.BLL.Properties.Settings.Default.RuRo_BLL_PTtest_ChasCommonSvc;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event queryPatientCompletedEventHandler queryPatientCompleted;
        
        /// <remarks/>
        public event queryDiagnosisCompletedEventHandler queryDiagnosisCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://chas.hit.com/transport/integration/common/intf/queryPatient", RequestNamespace="http://chas.hit.com/transport/integration/common/intf", ResponseNamespace="http://chas.hit.com/transport/integration/common/intf", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("queryPatientResponse")]
        public string queryPatient(string queryPatientRequest) {
            object[] results = this.Invoke("queryPatient", new object[] {
                        queryPatientRequest});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void queryPatientAsync(string queryPatientRequest) {
            this.queryPatientAsync(queryPatientRequest, null);
        }
        
        /// <remarks/>
        public void queryPatientAsync(string queryPatientRequest, object userState) {
            if ((this.queryPatientOperationCompleted == null)) {
                this.queryPatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnqueryPatientOperationCompleted);
            }
            this.InvokeAsync("queryPatient", new object[] {
                        queryPatientRequest}, this.queryPatientOperationCompleted, userState);
        }
        
        private void OnqueryPatientOperationCompleted(object arg) {
            if ((this.queryPatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.queryPatientCompleted(this, new queryPatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("http://chas.hit.com/transport/integration/common/intf/queryDiagnosis", RequestNamespace="http://chas.hit.com/transport/integration/common/intf", ResponseNamespace="http://chas.hit.com/transport/integration/common/intf", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("queryDiagnosisResponse")]
        public string queryDiagnosis(string queryDiagnosisRequest) {
            object[] results = this.Invoke("queryDiagnosis", new object[] {
                        queryDiagnosisRequest});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void queryDiagnosisAsync(string queryDiagnosisRequest) {
            this.queryDiagnosisAsync(queryDiagnosisRequest, null);
        }
        
        /// <remarks/>
        public void queryDiagnosisAsync(string queryDiagnosisRequest, object userState) {
            if ((this.queryDiagnosisOperationCompleted == null)) {
                this.queryDiagnosisOperationCompleted = new System.Threading.SendOrPostCallback(this.OnqueryDiagnosisOperationCompleted);
            }
            this.InvokeAsync("queryDiagnosis", new object[] {
                        queryDiagnosisRequest}, this.queryDiagnosisOperationCompleted, userState);
        }
        
        private void OnqueryDiagnosisOperationCompleted(object arg) {
            if ((this.queryDiagnosisCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.queryDiagnosisCompleted(this, new queryDiagnosisCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void queryPatientCompletedEventHandler(object sender, queryPatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class queryPatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal queryPatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void queryDiagnosisCompletedEventHandler(object sender, queryDiagnosisCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class queryDiagnosisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal queryDiagnosisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591